name: Generate  Exe file

on: [push]

jobs:
  build-medsync:
    runs-on: windows-latest
    name: Windows build  #https://github.com/MScholtes/PS2EXE/issues/82
    steps:
      - name: Check out repository code for PS1 
        uses: actions/checkout@v3
      - name: Install from PSGallery
        shell: powershell
        run: |
          $env:PSModulePath 
          Set-PSRepository PSGallery -InstallationPolicy Trusted       
          Install-Module ps2exe -Scope AllUsers
          Import-Module ps2exe
      - name: generate exe
        shell: powershell
        run: |
          ps2exe medsync/medsync.ps1 medsync/medsync.exe    

 
      - name: Upload artifact
        # if: ${{ github.ref != 'refs/heads/main' || github.event_name == 'workflow_dispatch' }}
        uses: actions/upload-artifact@v2
        with:
          name: medsync
          path: medsync/medsync.exe

      - name: Create zip file for linux
        run: Compress-Archive -Path "medsync/medsync.exe", "medsync/medsync.sh", "medsync/medsync.ps1", "medsync/medsync.txt" -DestinationPath "medsync/medsync.zip"


      - name: Upload release assets
        if: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: medsync/medsync.zip
          asset_name: medsync.zip
          asset_content_type: application/zip    

      - name: Get latest release version
        id: get_latest_release
        run: |
          $version = git describe --tags --abbrev=0 --exclude="*-*" 2>$null
          if ($LASTEXITCODE -eq 0 -and $version) {
            Write-Host "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          }
          else {
            Write-Host "VERSION=v0.0.10" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          }
          Write-Host "lv:$LASTEXITCODE v:$version env:$env:GITHUB_ENV"
          exit 0

      - name: Extract release number and add one
        id: extract_release_number
        run: |
          $latestRelease = $env:VERSION
          $releaseNumber = $latestRelease -replace 'v(\d+)\..+', '$1'
          Write-Host "rel: $latestRelease nr:  $releaseNumber"
          Write-Host 'rel: $latestRelease nr:  $releaseNumber'
          
          Write-Host "::set-output name=release_number::$releaseNumber"

      - name: Create Release
        # if: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
        with:
          tag_name: v${releaseNumber}
          release_name: "Release v${releaseNumber}"
          body: |
            Description of the release          

      - name: Download artifact
        id: download_artifact
        uses: actions/download-artifact@v2
        with:
          name: medsync-artifact
          path: downloaded-artifact

      - name: Upload release assets zip
        if: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: medsync/medsync.zip
          asset_name: medsync-v${releaseNumber}.zip
          asset_content_type: application/zip
      - name: Upload release assets exe
        if: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: medsync/medsync.exe
          asset_name: medsync-v${releaseNumber}.zip
          asset_content_type: application/octet-stream